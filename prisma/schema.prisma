// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  credentials credential[]
  secureNotes secureNote[]
  cards       cards[]
  wifis       wifi[]
}

model credential {
  id        Int      @id @default(autoincrement())
  user      user     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  label     String
  url       String
  username  String
  password  String
  createdAt DateTime @default(now()) @db.Timestamptz()

  @@unique([userId, label])
}

model secureNote {
  id        Int      @id @default(autoincrement())
  user      user     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  label     String   @db.VarChar(50)
  content   String   @db.VarChar(1000)
  createdAt DateTime @default(now()) @db.Timestamptz()

  @@unique([userId, label])
}

model cards {
  id           Int      @id @default(autoincrement())
  user         user     @relation(fields: [userId], references: [id])
  userId       Int      @map("user_id")
  label        String
  number       String
  name         String
  securityCode String   @map("security_code")
  expiryDate   String   @map("expiry_date")
  password     String
  isVirtual    Boolean  @map("is_virtual")
  type         CardType @default(credit)
  createdAt    DateTime @default(now()) @db.Timestamptz()

  @@unique([userId, label])
}

model wifi {
  id        Int      @id @default(autoincrement())
  user      user     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  label     String
  ssid      String
  password  String
  createdAt DateTime @default(now()) @db.Timestamptz()
}

enum CardType {
  credit
  debit
  both
}
